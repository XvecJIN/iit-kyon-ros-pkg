<launch>

  <arg name="gazebo" default="true"/>
  <arg name="cartesio" default="false"/>
  <param if="$(arg gazebo)" name="use_sim_time" type="bool" value="true"/>
  <param if="$(arg cartesio)" name="use_sim_time" type="bool" value="false"/>  
  
  <!-- gazebo configuration parameters -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="false"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="codesign" default="false"/>
  
  <!-- kyon configuration parameters -->
  <arg name="arms" default="false"/>
  <arg name="legs" default="true"/>
  <arg name="sensors" default="false"/>
  <arg name="payload" default="false"/>
  <arg name="dagana" default="false"/>
  <arg name="feet" default="true"/>
  <arg name="wheels" default="false"/>
  <arg name="steering_wheels" default="false"/>
  <arg name="ft_sensors" default="true"/>


  <!-- Internal arguments, rewrite human-readable gazebo arguments to it's internal arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg headless)" name="command_arg2" value=""/>
  <arg     if="$(arg headless)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>
  
  <!-- run gazebo -->
  <group if="$(arg gazebo)">
  
  <!-- from where the simulation enviornment will be loaded:
       WARNING: exactly one parameter has to be true, otherwise simulation behaviour is undefined -->
  <arg name="world_name" default="$(find kyon_gazebo)/worlds/kyon_man.world"/>
  
  <!-- Load the URDF/SRDF into the ROS Parameter Server -->
  <param name="robot_description_gz"
         command="$(find xacro)/xacro $(find kyon_urdf)/urdf/kyon_robot.urdf.xacro floating_joint:=false upper_body:=$(arg arms) legs:=$(arg legs) sensors:=$(arg sensors) payload:=$(arg payload) dagana:=$(arg dagana) feet:=$(arg feet) wheels:=$(arg wheels) steering_wheels:=$(arg steering_wheels) ft_sensors:=$(arg ft_sensors)"/>
         
  <param name="robot_description"
         command="$(find xacro)/xacro $(find kyon_urdf)/urdf/kyon.urdf.xacro floating_joint:=true upper_body:=$(arg arms) legs:=$(arg legs) sensors:=$(arg sensors) payload:=$(arg payload) dagana:=$(arg dagana) feet:=$(arg feet) wheels:=$(arg wheels) steering_wheels:=$(arg steering_wheels) ft_sensors:=$(arg ft_sensors)"/>
         
  <param name="robot_description_semantic"
         command="$(find xacro)/xacro $(find kyon_srdf)/srdf/kyon.srdf.xacro floating_joint:=true upper_body:=$(arg arms) legs:=$(arg legs) sensors:=$(arg sensors) payload:=$(arg payload) dagana:=$(arg dagana) feet:=$(arg feet) wheels:=$(arg wheels) steering_wheels:=$(arg steering_wheels) ft_sensors:=$(arg ft_sensors)"/>
         
  <!-- start gazebo server-->
  	<node name="gazebo" 
          pkg="gazebo_ros" 
          type="$(arg script_type)" 
          respawn="false" 
          output="screen"
		      args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name) -namespace kyon" />

  	<!-- start gazebo client -->
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen" if="$(arg gui)"/>

  	<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
	  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
		      args="-urdf -model kyon -param robot_description_gz"/>

  </group>
  
  <include if="$(arg cartesio)" file="$(find kyon_cartesio)/launch/kyon.launch">
  	<arg name="arms" value="$(arg arms)"/>
  	<arg name="legs" value="$(arg legs)"/>
  	<arg name="sensors" value="$(arg sensors)"/>
  	<arg name="payload" value="$(arg payload)"/>
  	<arg name="dagana" value="$(arg dagana)"/>
  	<arg name="wheels" value="$(arg wheels)"/>
	<arg if="$(arg codesign)" name="ik" value="$(find kyon_cartesio)/config/kyon_stack_codesign.yaml"/>
  </include>

</launch>
